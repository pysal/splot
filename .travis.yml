language: python
dist: xenial
sudo: true
branches:
  only:
    - master
python:
  - 3.6
  - 3.7

env:
  - PYSAL_PYPI=true #testing on dependencies libpysal, esda, mapcalssify, giddy and spreg on pypi
  - PYSAL_PYPI=false

matrix:
  allow_failures:
      - python: 3.6
        env: PYSAL_PYPI=false
      - python: 3.7
        env: PYSAL_PYPI=false

before_install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p ./miniconda
  - export PATH=`pwd`/miniconda/bin:$PATH
  - conda update --yes conda
  - conda config --add channels conda-forge
  - conda config --set channel_priority strict
  - conda create -y -q -n test-env python=$TRAVIS_PYTHON_VERSION
  - source activate test-env

install:
  - conda install geopandas --channel conda-forge --yes
  - conda install --yes pip seaborn ipywidgets bokeh
  - conda list
  - conda info -a
  - pip install -r requirements.txt
  - if "$PYSAL_PYPI"; then
      echo 'testing pypi libpysal esda mapclassify giddy spreg';
    else
      echo 'testing git libpysal esda mapclassify giddy spreg';
      git clone https://github.com/pysal/libpysal.git;
      cd libpysal; pip install .; cd ../;
      git clone https://github.com/pysal/esda.git;
      cd esda; pip install .; cd ../;
      git clone https://github.com/pysal/mapclassify.git;
      cd mapclassify; pip install .; cd ../;
      git clone https://github.com/pysal/giddy.git;
      cd giddy; pip install .; cd ../;
      git clone https://github.com/pysal/spreg.git;
      cd spreg; pip install .; cd ../;
    fi;
  - pip install nose coverage coveralls
  # Now install splot (don't use 'pip install .', we'll run out of space)
  - python setup.py sdist
  - cd dist && pip install splot-*.tar.gz && cd ..
  # We need the Agg backend to use Matplotlib on TravisCI, otherwise
  # we get an error "DISPLAY variable not set"
  - cp utils/matplotlibrc .


script:
  - python -c 'import libpysal; libpysal.examples.load_example("Guerry"); libpysal.examples.load_example("Rio Grande do Sul")'
  - nosetests --verbose --with-doctest --with-coverage --cover-package=splot;
#  - cd notebooks
#  - make test

notifications:
    email:
        recipients:
            - sjsrey@gmail.com
        on_change: always
        on_failure: always

after_success:
  - coveralls
